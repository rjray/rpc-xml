RPC::XML - An implementation of XML-RPC

Version: 0.81

WHAT IS IT

The RPC::XML package is an implementation of XML-RPC. The module provides
classes for sample client and server implementations, a server designed as an
Apache location-handler, and a suite of data-manipulation classes that are
used by them.


USING RPC::XML

There are not any pre-packaged executables in this distribution (except for a
utility tool). Client usage will usually be along the lines of:

    use RPC::XML::Client;
    ...
    my $client = RPC::XML::Client->new(
        'http://www.oreillynet.com/meerkat/xml-rpc/server.php' );
    my $req = RPC::XML::request->new('meerkat.getChannelsBySubstring', 'perl');
    my $res = $client->send_request($req);
    # This returns an object of the RPC::XML::response class. This double-call
    # of value() first gets a RPC::XML::* data object from the response, then
    # the actual data from it:
    my $value = $res->value->value;

Running a simple server is not much more involved:

    use RPC::XML::Server;
    ...
    my $srv = RPC::XML::Server->new( host => 'localhost',
                                     port => 9000 );
    # You would then use $srv->add_method to add some remotely-callable code
    ...
    $srv->accept_loop; # Stays in an accept/connect loop


BUILDING/INSTALLING

This package is set up to configure and build like a typical Perl extension.
To build:

        perl Makefile.PL
        make && make test

If RPC::XML passes all tests, then:

        make install

You may need super-user access to install.


PROBLEMS/BUG REPORTS

Please send any reports of problems or bugs to rjray@blackperl.com or use
the GitHub Issues page for this project:

    https://github.com/rjray/rpc-xml/issues


SEE ALSO

XML-RPC:          http://www.xmlrpc.com/spec
The Artistic 2.0: http://www.opensource.org/licenses/artistic-license-2.0.php
The LGPL 2.1:     http://www.opensource.org/licenses/lgpl-2.1.php


CHANGES

* MANIFEST
* perlcritic.rc (added)
Add a perlcritic.rc file for testers who run author tests.

* t/40_server.t
* t/40_server_xmllibxml.t
Remove redundant testing and general clean-up. Removed tests of
url() that were just re-testing HTTP::Daemon::url().

* lib/RPC/XML/Client.pm
Parameterize the request-as-string debug feature.

* lib/RPC/XML/Client.pm
Merge pull request #13 from
enrico-sorcinelli/add-request-string. Added xmlrpc request
string as object property. (Enrico Sorcinelli)
